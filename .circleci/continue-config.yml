# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
parameters:
  base:
    type: boolean
    default: false
  spec:
    type: boolean
    default: false
  test:
    type: boolean
    default: false

executors:
  linux_executor: # declares a reusable executor
    parameters:
      resource_class:
        type: string
    docker:
      - image: secretflow/ubuntu-base-ci:latest
    resource_class: << parameters.resource_class >>
    shell: /bin/bash --login -eo pipefail

commands:
  kill_countdown:
    steps:
      - run:
          name: Cancel job after set time
          background: true
          command: |
            sleep 2400
            echo "Canceling workflow as too much time has elapsed"
            curl -X POST --header "Content-Type: application/json" "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/cancel?circle-token=${BUILD_TIMER_TOKEN}"
  pytest_wrapper:
    parameters:
      target_folder:
        type: string
    steps:
      - restore_cache:
          name: restore pip cache
          key: pip-{{ arch }}-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install test tools
          command: |
            conda init
            pip install -r dev-requirements.txt
            pip install --force-reinstall pytest
      - run:
          name: "Run tests"
          command: |
            conda init
            pytest --suppress-no-test-exit-code  -n auto --junitxml=results.xml -v -x --capture=no --cov=secretflow_spec/  --cov-report=xml:coverage.xml  << parameters.target_folder >>
      - store_test_results:
          path: ./results.xml
  run_test:
    steps:
      - kill_countdown
      - when:
          condition:
            or:
              - << pipeline.parameters.spec >>
              - << pipeline.parameters.test >>
          steps:
            - pytest_wrapper:
                target_folder: tests
jobs:
  linux_build:
    parameters:
      resource_class:
        type: string
    executor:
      name: linux_executor
      resource_class: << parameters.resource_class >>
    steps:
      - checkout
      - restore_cache:
          name: restore pip cache
          key: &pip-cache pip-{{ arch }}-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install python deps
          command: |
            conda init
            arch=$(uname -i)
            mkdir -p artifacts
            pip install -r requirements.txt --extra-index-url https://download.pytorch.org/whl/cpu
      - persist_to_workspace:
          root: .
          paths: 
            - artifacts
      - save_cache:
          key: *pip-cache
          paths:
            - /root/miniconda3/lib/python3.10/site-packages
  run_test:
    parameters:
      resource_class:
        type: string
    executor:
      name: linux_executor
      resource_class: << parameters.resource_class >>
    steps:
      - checkout
      - run_test

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build_and_test:
    jobs:
      - linux_build:
          name: linux_build-<<matrix.resource_class>>
          matrix:
            parameters:
              resource_class: ["2xlarge+"]
      - run_test